package com.ztel.app.web.ctrl.sys;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.ztel.app.service.sys.BaseTypeInfoService;
import com.ztel.app.service.sys.DeptVoService;
import com.ztel.app.service.sys.PostinfoService;
import com.ztel.app.service.sys.RoleinfoService;
import com.ztel.app.service.sys.UserVoService;
import com.ztel.app.service.sys.UserrolerelativeService;
import com.ztel.app.vo.sys.DeptTreeVo;
import com.ztel.app.vo.sys.UserVo;
import com.ztel.framework.util.FileUtil;
import com.ztel.framework.vo.Pagination;
import com.ztel.framework.web.ctrl.BaseCtrl;

@Controller
@RequestMapping("/sys/user")
public class UserCtrl extends BaseCtrl{
	
	private static Logger logger = LogManager.getLogger(UserCtrl.class);
	
	@Autowired
	private DeptVoService deptVoService = null;
	
	@Autowired
	private UserVoService userVoService = null;
	
	@Autowired
	private PostinfoService postinfoService = null;
	
	@Autowired
	private BaseTypeInfoService baseTypeInfoService = null;
	
	@Autowired
	private RoleinfoService roleinfoService = null;
	
	@Autowired
	private UserrolerelativeService userrolerelativeService = null;
	
	@RequestMapping("toUserinfo")
	public String index(HttpServletRequest request) {
		return "/sys/v_user";
	}
	
	/**
	  * 获取用户信息列表
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("getUsers")
	 @ResponseBody
	 public  Map<String, Object> getUserList(UserVo userVo,HttpServletRequest request) throws Exception {
		 Pagination<?> page = this.getPagination(request);

		 Map<String, Object> result=new HashMap<String, Object>();  
		
		 if (userVo!=null) {
			 //System.out.println("roleinfo="+roleinfo.getRolename()+","+roleinfo.getId()); 
			 page.setParam(userVo);
		}
		 List<UserVo> paras = userVoService.getUserPageList(page);
		 result.put("rows",paras);  
		 result.put("total",page.getTotalCount());  

		 return result;
	 }
	
	@RequestMapping("/getDeptTree")
	@ResponseBody
	public List<DeptTreeVo> getDeptTree(HttpServletRequest request) {
		String id = request.getParameter("id");
		if(id==null||id.equals(""))id="0";
		List<DeptTreeVo> treeList = deptVoService.getDeptTree(id) ;
		 
		return treeList;
	}
	
	@RequestMapping("/getUserListByDeptID")
	@ResponseBody
	public List<UserVo> getUserListByDeptId(HttpServletRequest request)
	{
		List<UserVo> userList = new ArrayList<>();
		String id = request.getParameter("depId");
		
		Integer deptid = 0;
		if(id!=null&&id.length()>0)deptid=Integer.parseInt(id);
		userList= userVoService.getUserListByDeptId(deptid);
		//System.out.println("userList=="+userList.size());
		return userList;
	}
	
	/**
	  * 密码重置
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping(value="resetPsw",method=RequestMethod.POST)
	 @ResponseBody
	 public   Map<String, Object> resetPsw(@RequestParam("id") List<Integer> ids) throws Exception {
		 Map<String, Object> map=new HashMap<String, Object>();  
		 int total=0;
		 if (ids!=null&&ids.size()>0) {
			 total = ids.size();
		}
		 try {
			 userVoService.resetPsw(ids);
			 map.put("msg", "成功");
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();  
			map.put("msg", "失败");
		}
		 map.put("total", total);
		 
		 return map;
	 }
	 
	 /**
	  * 新增用户
	  * @return
	  * @throws Exception
	  */                                    
	 @RequestMapping(value="doUserNew",method=RequestMethod.POST)
	// @ResponseBody
	 public   void UserNew(UserVo userVo,HttpServletRequest request,HttpServletResponse response) throws Exception {
		 Map<String, Object> map=new HashMap<String, Object>();  
		 int total=0;
		 String birthdate=userVo.getBirthdate();
		 if(birthdate!=null&&!"".equals(birthdate.trim())){
			 birthdate=birthdate.replace("-", "");
			 //System.out.println(birthdate+"-----------");
			 userVo.setBirthdate(birthdate);
		 }
		 HashMap<String, String> fileNameMap=FileUtil.uploadFile(request, response, "user");
		 //System.out.println("1:="+fileNameMap.get("photoname1").toString());
		 //System.out.println("2:="+fileNameMap.get("signatureimg1").toString());
		 String photoname=fileNameMap.get("photoname1");
		 String signatureimg=fileNameMap.get("signatureimg1");
		 
		 if(photoname==null)photoname="";
		 if(signatureimg==null)signatureimg="";
		 
		 userVo.setPhotoname(photoname);
		 userVo.setSignatureimg(signatureimg);
        
		 try {
			 userVoService.insertNewUser(userVo);
			 map.put("msg", "成功");
			 total=1;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();  
			map.put("msg", "失败");
		}
		 map.put("total", total);
		 
		 //直接使用注解@ResponseBody，框架自动返回json串，但是form形式提交的返回json在IE在会出现下载json的提示，所以修改成设置response的形式
		 String result = JSON.toJSONString(map);
		 response.setContentType("text/html;charset=UTF-8");
		 response.getWriter().write(result);  
	 }
	 
	 /**
	  * 修改用户信息
	  * @return
	  * @throws Exception
	  */                                    
	 @RequestMapping(value="doUpdateUser",method=RequestMethod.POST)
	 // @ResponseBody
	 public   void doUpdateUser(UserVo userVo,HttpServletRequest request,HttpServletResponse response) throws Exception {
		 Map<String, Object> map=new HashMap<String, Object>();  
		 int total=0;
		 String birthdate=userVo.getBirthdate();
		 if(birthdate!=null&&!"".equals(birthdate.trim())){
			 birthdate=birthdate.replace("-", "");
			 //System.out.println(birthdate+"-----------");
			 userVo.setBirthdate(birthdate);
		 }
		 HashMap<String, String> fileNameMap=FileUtil.uploadFile(request, response, "user");
		 //System.out.println("1:="+fileNameMap.get("photoname1").toString());
		 //System.out.println("2:="+fileNameMap.get("signatureimg1").toString());
		 String photoname=fileNameMap.get("photoname1");
		 if(photoname==null||"".equals(photoname))photoname=null;
		 //if(signatureimg==null)signatureimg="";
		 //String signatureimg=fileNameMap.get("signatureimg1").toString();
		 userVo.setPhotoname(photoname);
		 //userVo.setSignatureimg(signatureimg);
		 
		 try {
			 userVoService.updateUser(userVo);
			 map.put("msg", "成功");
			 total=1;
		 } catch (Exception e) {
			 // TODO: handle exception
			 e.printStackTrace();  
			 map.put("msg", "失败");
		 }
		 map.put("total", total);
		 
		 //直接使用注解@ResponseBody，框架自动返回json串，但是form形式提交的返回json在IE在会出现下载json的提示，所以修改成设置response的形式
		 String result = JSON.toJSONString(map);
		 response.setContentType("text/html;charset=UTF-8");
		 response.getWriter().write(result);  
	 }
	 
	 /**
	  * 获取岗位下拉列表
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("getPostCombobox")
	 @ResponseBody
	 public  List<HashMap<String, String>> getPostCombobox(HttpServletRequest request) throws Exception {
		 List<HashMap<String, String>> boxList=new ArrayList<>();
		 boxList=postinfoService.getPostCombobox();
		 return boxList;
	 }
	 /**
	  * 获取部门下拉列表
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("getDeptCombobox")
	 @ResponseBody
	 public  List<HashMap<String, String>> getDeptCombobox(HttpServletRequest request) throws Exception {
		 List<HashMap<String, String>> boxList=new ArrayList<>();
		 boxList=deptVoService.getDeptCombobox();
		 return boxList;
	 }
	 /**
	  * 获取角色下拉列表
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("getRolesCombobox")
	 @ResponseBody
	 public  List<HashMap<String, String>> getRolesCombobox(HttpServletRequest request) throws Exception {
		 List<HashMap<String, String>> boxList=new ArrayList<>();
		 boxList=roleinfoService.getRoleinfoCombobox();
		 return boxList;
	}
	 /**
	  * 获取银行下拉列表
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("getBanksCombobox")
	 @ResponseBody
	 public  List<HashMap<String, String>> getBanksCombobox(HttpServletRequest request) throws Exception {
		 
		 List<HashMap<String, String>> boxList=new ArrayList<>();
		 boxList=baseTypeInfoService.getBaseTypeinfoCombobox("BANKS");
		 //System.out.println(boxList.size()+"------");
		 return boxList;
	 }
	 /**
	  * 获取下拉列表
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("getComboboxByTypeCode")
	 @ResponseBody
	 public  List<HashMap<String, String>> getComboboxByTypeCode(@RequestParam("typeCode") String typecode,HttpServletRequest request) throws Exception {
		 
		 List<HashMap<String, String>> boxList=new ArrayList<>();
		 boxList=baseTypeInfoService.getBaseTypeinfoCombobox(typecode);
		 //System.out.println(boxList.size()+"------");
		 return boxList;
	 }
	 
	 /**
	  * 用户授权
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping("doUserGrant")
	 @ResponseBody
	 public void doUserGrant(HttpServletRequest request,HttpServletResponse response) throws Exception {
		 Map<String, Object> map=new HashMap<String, Object>();  
		 int total=1;
		 String userid=request.getParameter("userid");
		 String roleid=request.getParameter("roleid");
		 //System.out.println("userid=="+userid);
		 //System.out.println("roleid=="+roleid);
		 if (userid!=null&&!"".equals(userid)&&roleid!=null&&!"".equals(roleid)) {
			 UserVo userVo=new UserVo();
			 userVo.setRoleid(Integer.parseInt(roleid));
			 userVo.setId(Long.parseLong(userid));
			 try {
				 userVoService.updateUser(userVo);
				 map.put("msg", "成功");
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();  
				map.put("msg", "失败");
			}
		 }
		 map.put("total", total);
		 
		//直接使用注解@ResponseBody，框架自动返回json串，但是form形式提交的返回json在IE在会出现下载json的提示，所以修改成设置response的形式
		 String result = JSON.toJSONString(map);
		 response.setContentType("text/html;charset=UTF-8");
		 response.getWriter().write(result);
		 
		 //return map;
	 }
}
